// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EADCA2_Anime.Migrations
{
    [DbContext(typeof(AnimeDbContext))]
    [Migration("20230425212654_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EADCA2_Anime.Model.Anime", b =>
                {
                    b.Property<int>("anime_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("anime_id"));

                    b.Property<int>("duration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("genre_id")
                        .HasColumnType("integer");

                    b.Property<double>("rating")
                        .HasColumnType("double precision");

                    b.Property<string>("season")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("studio_id")
                        .HasColumnType("integer");

                    b.Property<string>("synopsis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("anime_id");

                    b.HasIndex("genre_id");

                    b.HasIndex("studio_id");

                    b.ToTable("Anime", "public");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Character", b =>
                {
                    b.Property<int>("character_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("character_id"));

                    b.Property<int?>("anime_id")
                        .HasColumnType("integer");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("character_id");

                    b.HasIndex("anime_id");

                    b.ToTable("Character", "public");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Genre", b =>
                {
                    b.Property<int>("genre_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("genre_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("genre_id");

                    b.ToTable("Genre", "public");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Staff", b =>
                {
                    b.Property<int>("staff_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("staff_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("studio_id")
                        .HasColumnType("integer");

                    b.HasKey("staff_id");

                    b.HasIndex("studio_id");

                    b.ToTable("Staff", "public");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Studio", b =>
                {
                    b.Property<int>("studio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("studio_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("studio_id");

                    b.ToTable("Studio", "public");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Anime", b =>
                {
                    b.HasOne("EADCA2_Anime.Model.Genre", "Genre")
                        .WithMany("Anime")
                        .HasForeignKey("genre_id");

                    b.HasOne("EADCA2_Anime.Model.Studio", "Studio")
                        .WithMany("Anime")
                        .HasForeignKey("studio_id");

                    b.Navigation("Genre");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Character", b =>
                {
                    b.HasOne("EADCA2_Anime.Model.Anime", "Anime")
                        .WithMany("Character")
                        .HasForeignKey("anime_id");

                    b.Navigation("Anime");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Staff", b =>
                {
                    b.HasOne("EADCA2_Anime.Model.Studio", "Studio")
                        .WithMany("Staff")
                        .HasForeignKey("studio_id");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Anime", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Genre", b =>
                {
                    b.Navigation("Anime");
                });

            modelBuilder.Entity("EADCA2_Anime.Model.Studio", b =>
                {
                    b.Navigation("Anime");

                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
